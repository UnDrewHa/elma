@import url("https://fonts.googleapis.com/css?family=Roboto+Condensed:400,700|Roboto:300,400,400i,700");
html {
  box-sizing: border-box;
  font-family: sans-serif;
  font-size: 62.5%;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}
*,
*::before,
*::after {
  box-sizing: inherit;
}
body {
  margin: 0;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
progress {
  vertical-align: baseline;
}
template,
[hidden] {
  display: none;
}
a {
  background-color: transparent;
  -webkit-text-decoration-skip: objects;
  text-decoration: none;
}
a:hover,
a:active {
  outline-width: 0;
}
abbr[title] {
  border-bottom: none;
  text-decoration: underline;
  text-decoration: underline dotted;
}
b,
strong {
  font-weight: inherit;
}
b,
strong {
  font-weight: bolder;
}
dfn {
  font-style: italic;
}
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
mark {
  background-color: #ff0;
  color: #000;
}
small {
  font-size: 80%;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
img {
  border-style: none;
}
svg:not(:root) {
  overflow: hidden;
}
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}
figure {
  margin: 1em 40px;
}
hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible;
}
button,
input,
select,
textarea {
  font: inherit;
  margin: 0;
}
optgroup {
  font-weight: bold;
}
button,
input {
  overflow: visible;
}
button,
select {
  text-transform: none;
}
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
legend {
  box-sizing: border-box;
  color: inherit;
  display: table;
  max-width: 100%;
  padding: 0;
  white-space: normal;
}
textarea {
  overflow: auto;
}
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  padding: 0;
}
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
[type="search"] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}
::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}
img {
  max-width: 100%;
}
.slick-slider {
  position: relative;
  display: block;
  box-sizing: border-box;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-touch-callout: none;
  -khtml-user-select: none;
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent;
}
.slick-list {
  position: relative;
  display: block;
  overflow: hidden;
  margin: 0;
  padding: 0;
}
.slick-list:focus {
  outline: none;
}
.slick-list.dragging {
  cursor: pointer;
  cursor: hand;
}
.slick-slider .slick-track,
.slick-slider .slick-list {
  -webkit-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}
.slick-track {
  position: relative;
  top: 0;
  left: 0;
  display: block;
}
.slick-track:after {
  clear: both;
}
.slick-track:before,
.slick-track:after {
  display: table;
  content: '';
}
.slick-loading .slick-track {
  visibility: hidden;
}
.slick-loading .slick-slide {
  visibility: hidden;
}
.slick-slide {
  display: none;
  float: left;
  height: 100%;
  min-height: 1px;
}
.slick-slide img {
  display: block;
}
.slick-slide.slick-loading img {
  display: none;
}
.slick-slide.dragging img {
  pointer-events: none;
}
[dir='rtl'] .slick-slide {
  float: right;
}
.slick-initialized .slick-slide {
  display: block;
}
.slick-vertical .slick-slide {
  display: block;
  height: auto;
  border: 1px solid transparent;
}
.slick-arrow.slick-hidden {
  display: none;
}
.screen {
  min-height: 600px;
}
.screen.s0 {
  background: -webkit-linear-gradient(315deg, #ee7c8a 0%, #fbcda6 100%);
  background: linear-gradient(135deg, #ee7c8a 0%, #fbcda6 100%);
}
.screen.s0 .screen__inner {
  padding: 240px 200px 90px 180px;
}
.screen.s0 .logo {
  position: absolute;
  top: 80px;
  left: 180px;
  background: url("") 50% no-repeat;
  background-size: cover;
  height: 44px;
  width: 188px;
}
.screen.s0 .callback {
  position: absolute;
  top: 80px;
  right: 200px;
  text-align: right;
}
.screen.s0 .tel {
  color: #fff;
  font: 30px/1 'Roboto Condensed', sans-serif;
}
.screen.s0 .tel:hover,
.screen.s0 .tel:active {
  text-decoration: underline;
}
.screen.s0 .call-me {
  background: -webkit-linear-gradient(0deg, #cf3b42 0%, #e53d47 100%);
  background: linear-gradient(90deg, #cf3b42 0%, #e53d47 100%);
  border-radius: 22px;
  color: #fff;
  display: block;
  font: 14px/42px 'Roboto', sans-serif;
  letter-spacing: 0.05em;
  height: 44px;
  margin: 0.8em auto 0;
  text-align: center;
  text-transform: uppercase;
  width: 200px;
}
.screen.s0 h1 {
  color: #fff;
  font: 44px/50px 'Roboto Condensed', sans-serif;
  margin: 0;
  width: 470px;
}
.screen.s0 p {
  color: #fff;
  font: 300 22px/1.2 'Roboto', sans-serif;
  margim: 0.5em 0 0;
}
.screen.s0 .order {
  border: 2px solid #fff;
  border-radius: 22px;
  color: #fff;
  display: inline-block;
  font: 14px/1 'Roboto', sans-serif;
  letter-spacing: 0.05em;
  margin: 2em auto 0;
  padding: 13px 34px;
  text-align: center;
  text-transform: uppercase;
}
.screen.s2 {
  background: -webkit-linear-gradient(315deg, #45c7df 0%, #18fdaa 100%);
  background: linear-gradient(135deg, #45c7df 0%, #18fdaa 100%);
}
.screen.s4 {
  background: -webkit-linear-gradient(315deg, #5c5eb5 0%, #b45bab 100%);
  background: linear-gradient(135deg, #5c5eb5 0%, #b45bab 100%);
}
.screen.s6 {
  background: -webkit-linear-gradient(315deg, #f68c02 0%, #f6d202 100%);
  background: linear-gradient(135deg, #f68c02 0%, #f6d202 100%);
}
.screen__inner {
  margin: 0 auto;
  max-width: 1400px;
  position: relative;
  width: 100%;
}
.footer {
  background: -webkit-linear-gradient(315deg, #b72c33 0%, #e53d47 100%);
  background: linear-gradient(135deg, #b72c33 0%, #e53d47 100%);
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
